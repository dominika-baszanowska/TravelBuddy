@page "/CreateTrip"
@using TravelBuddy.Logic
@using TravelBuddy.Models
@using System.Globalization
@inject CityService CityService
@inject CountryService CountryService
@inject GuideService GuideService
@inject TripService TripService

<style>
    .p-list-item {
        color: black;
        font-size: 20px;
        display: inline-block; 
        margin-left: 10px;
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>

<div class="faded-image-5"></div>
<div class="main_container">
    
    @if (_countriesVisible)
    {
        <div id="country_div" class="container">
            <h2 class="travel-heading">Where would you like to go?</h2>
            <div style="height: 700px; overflow-y: auto;">
                <p class="lead">Select a destination country:</p>
                <ul class="list-group country_list">
                    @{
                        var countries = CountryService.GetCountries();

                        foreach (var country in countries)
                        {
                            <li class="list-group-item" @onclick="() => FindCities(country)">
                                <span class="@country.Flag"></span>
                                <p class="p-list-item" style="color: orange">&#9733 @country.Rating</p>
                                <p class="p-list-item">@country.Name</p>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    }
    
    @if (_citiesVisible)
    {
        <div id="city_div" class="container">
            <h2 class="travel-heading">Choose one of these most popular destinations in @_countryName!</h2>
            <div style="height: 700px; overflow-y: auto;">
                <ul class="list-group city_list">
                    @{
                        foreach (var city in _cities)
                        {
                            <li class="list-group-item" @onclick="() => FindGuides(city)">
                                <p class="p-list-item">@city.Name</p>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    }
    
    @if (_guidesVisible)
    {
        <div id="guide_div" class="container">
            <h2 class="travel-heading">Perfect! Now choose your guide in @_cityName!</h2>
            <div class="form-group mb-3">
                <input type="text" class="form-control" @bind="SearchTerm" placeholder="Search guides...">
            </div>
            <div style="height: 700px; overflow-y: auto;">
                <ul class="list-group guide_list">
                    @{
                        foreach (var guide in _filteredGuides)
                        {
                            <li class="list-group-item" style="display: flex; justify-content: space-between; align-items: center;" @onclick="() => ShowCreateTrip(guide)">
                                <img src="@guide.User.ProfilePicture" alt="Guide Profile Picture" style="width: 40px; height: 40px; border: solid black 2px;"/>
                                <p class="p-list-item" style="color: orange">&#9733 @guide.Rating</p>
                                <p class="p-list-item">@guide.User.FirstName @guide.User.LastName</p>
                                <p class="p-list-item" style="margin-left: auto;">@guide.Speciality</p>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    }
    
    @if (_createTripVisible)
    {
        <div class="container">
            <div class="row justify-content-center mt-5">
                <div class="col-md-6">
                    <h1 class="text-center travel-heading">Book your guide in @_cityName!</h1>
                    <div class="card">
                        <div class="card-body">
                            <div class="form-group mb-3">
                                <label for="startDate">Start Date</label>
                                <input type="date" class="form-control" id="startDate" @bind="StartDate" required>
                            </div>
                            <div class="form-group mb-3">
                                <label for="endDate">End Date</label>
                                <input type="date" class="form-control" id="endDate" @bind="EndDate" required>
                            </div>
                            <div class="form-group mb-3">
                                <label for="price">Guide Price @_selectedGuide.CurrencyIso</label>
                                <input type="text" class="form-control" id="price" @bind="_tripPrice" disabled>
                            </div>
                            <div class="form-group mb-3">
                                <label for="comments">Comments</label>
                                <input type="text" class="form-control" id="comments" @bind="_comments">
                            </div>
                            <div class="d-grid gap-2">
                                <button class="btn btn-primary" @onclick="CreateTripWithGuideDetails">Book Guide</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    
    @if (_tripSuccessVisible)
    {
        <div class="container">
            <div class="row justify-content-center mt-5">
                <div class="col-md-6">
                    <h1 class="text-center travel-heading">Pack your bags!!!</h1>
                    <h2 class="text-center travel-heading">You're going to @_cityName! <span class="@_selectedCountry.Flag"></span></h2>
                    <div class="card">
                        <div class="card-body">
                            <p class="p-list-item">Trip Summary</p>
                            <div class="form-group mb-3">
                                <img src="@_selectedGuide.User.ProfilePicture" alt="Guide Profile Picture" style="width: 150px; height: 150px; border: solid black 2px;" class="center"/>
                            </div>
                            <div class="form-group mb-3">
                                <label for="guide">Guide <p class="p-list-item" style="color: orange;">&#9733 @_selectedGuide.Rating</p></label>
                                <input type="text" class="form-control" id="guide" @bind="_guideName" disabled>
                            </div>
                            <div class="form-group mb-3">
                                <label for="country">Country <p class="p-list-item" style="color: orange">&#9733 @_selectedCountry.Rating</p></label>
                                <input type="text" class="form-control" id="country" @bind="_countryName" disabled>
                            </div>
                            <div class="form-group mb-3">
                                <label for="city">City</label>
                                <input type="text" class="form-control" id="city" @bind="_cityName" disabled>
                            </div>
                            <div class="form-group mb-3">
                                <label for="startDate">Start Date</label>
                                <input type="date" class="form-control" id="startDate" @bind="StartDate" disabled>
                            </div>
                            <div class="form-group mb-3">
                                <label for="endDate">End Date</label>
                                <input type="date" class="form-control" id="endDate" @bind="EndDate" disabled>
                            </div>
                            <div class="form-group mb-3">
                                <label for="price">Guide Price @_selectedGuide.CurrencyIso</label>
                                <input type="text" class="form-control" id="price" @bind="_tripPrice" disabled>
                            </div>
                            <div class="form-group mb-3">
                                <label for="comments">Comments</label>
                                <input type="text" class="form-control" id="comments" @bind="_comments" disabled>
                            </div>
                            <div class="d-grid gap-2">
                                <button type="button" class="btn btn-primary" onclick="location.href=''">Homepage</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

&nbsp;
&nbsp;

@code {

    bool _countriesVisible = true;
    bool _citiesVisible = false;
    bool _guidesVisible = false;
    bool _createTripVisible = false;
    bool _tripSuccessVisible = false;
    
    List<City> _cities = new();
    List<Guide> _guides = new();
    
    List<Guide> _filteredGuides; // The filtered list based on the search term
    string _searchTerm = string.Empty;
    string SearchTerm
    {
        get => _searchTerm;
        set
        {
            _searchTerm = value;
            OnSearchTermChanged();
        }
    }

    string _countryName = string.Empty;
    string _cityName = string.Empty;
    int _cityId;

    string _guideName;

    Guide _selectedGuide;
    Country _selectedCountry;

    private DateTime _startDate = DateTime.Now;
    DateTime StartDate
    {
        get => _startDate;
        set
        {
            _startDate = value;
            CalculateGuidePrice();
        }
    }
    
    DateTime _endDate = DateTime.Now.AddDays(3);
    DateTime EndDate
    {
        get => _endDate;
        set
        {
            _endDate = value;
            CalculateGuidePrice();
        }
    }
    
    string _comments = string.Empty;

    decimal _tripPrice = 0;

    void FindCities(Country country)
    {
        _selectedCountry = country;
        
        _cities = CityService.GetCities(country.Id);

        _countryName = country.Name;
        
        _countriesVisible = false;
        _citiesVisible = true;
    }

    void FindGuides(City city)
    {
        _guides = GuideService.GetNearbyGuides(city.Latitude, city.Longitude, 100000);
        _filteredGuides = _guides;
        
        _cityId = city.Id;
        _cityName = city.Name;
        
        _citiesVisible = false;
        _guidesVisible = true;
    }
    
    void ShowCreateTrip(Guide guide)
    {
        _selectedGuide = guide;
        
        _guidesVisible = false;
        _createTripVisible = true;

        CalculateGuidePrice();
    }

    void CreateTripWithGuideDetails()
    {
        TripService.CreateTrip(1002, _selectedGuide.UserId, _cityId, StartDate, _endDate, _comments);

        _guideName = $"{_selectedGuide.User.FirstName} {_selectedGuide.User.LastName}";
        
        _createTripVisible = false;
        _tripSuccessVisible = true;
    }

    void CalculateGuidePrice()
    {
        var timeSpan = _endDate - StartDate;

        var days = (decimal)Math.Round(timeSpan.TotalDays, MidpointRounding.AwayFromZero);
        
        if (days == 0 || _selectedGuide.PricePerHour == 0 || _selectedGuide.IsVolunteer) _tripPrice = 0;

        var result = days * _selectedGuide.PricePerHour * 4 / 10;
        
        _tripPrice = result < 0 ? 0 : result;
    }
    
    private void UpdateFilteredGuides()
    {
        _filteredGuides = _guides
            .Where(guide => guide.User.FirstName.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase) ||
                            guide.User.LastName.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase) ||
                            guide.Rating.ToString(CultureInfo.InvariantCulture).Contains(_searchTerm, StringComparison.OrdinalIgnoreCase) ||
                            (guide.Speciality ?? string.Empty).Contains(_searchTerm, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }
    
    private void OnSearchTermChanged()
    {
        UpdateFilteredGuides();
    }
}
